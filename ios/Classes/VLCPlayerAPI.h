// Autogenerated from Pigeon (v1.0.13), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN


/// The codec used by VLCPlayerApi.
NSObject<FlutterMessageCodec> *VLCPlayerApiGetCodec(void);

@protocol VLCPlayerApi
- (nullable NSNumber *)createOptions:(NSArray<NSString *> *)options error:(FlutterError *_Nullable *_Nonnull)error;
- (void)createByIOSOptions:(NSArray<NSString *> *)options viewId:(NSNumber *)viewId error:(FlutterError *_Nullable *_Nonnull)error;
- (void)disposeId:(NSNumber *)vid error:(FlutterError *_Nullable *_Nonnull)error;
- (void)releaseWithError:(FlutterError *_Nullable *_Nonnull)error;
- (void)setDefaultBufferSizeWidth:(NSNumber *)width height:(NSNumber *)height textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setDataSourceUri:(NSString *)uri path:(NSString *)path textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setVideoScaleValue:(NSNumber *)value textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)getVideoScaleTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (void)playUri:(NSString *)uri path:(NSString *)path textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (void)stopTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)getScaleTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setScaleScale:(NSNumber *)scale textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSString *)getAspectRatioTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setAspectRatioAspect:(NSString *)aspect textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setRateRate:(NSNumber *)rate textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)getRateTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)isPlayingTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)isSeekableTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (void)pauseTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)getPlayerStateTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)getVolumeTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)setVolumeVolume:(NSNumber *)volume textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)getTimeTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)setTimeTime:(NSNumber *)time textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)getPositionTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setPositionPos:(NSNumber *)pos textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)getLengthTextureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)addSlaveType:(NSNumber *)type uri:(NSString *)uri path:(NSString *)path select:(NSNumber *)select textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setVideoTitleDisplayPosition:(NSNumber *)position timeout:(NSNumber *)timeout textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSNumber *)recordDirectory:(NSString *)directory textureId:(NSNumber *)textureId error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void VLCPlayerApiSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<VLCPlayerApi> *_Nullable api);

NS_ASSUME_NONNULL_END
